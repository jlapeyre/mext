kill(a,b,c,d,e,f,g,h,i,j,k);
done;

take([a,b,c,d,e],3);
[a,b,c]$

take([a,b,c,d,e],-3);
[c,d,e]$

take([a,b,c,d,e],[2,3]);
[b,c]$

take([1,2,3,4,5,6,7,8,9,10],[2,10,2]);
[2,4,6,8,10]$

take([a,b,c,d],[-1,1,-1]);
[d,c,b,a]$

take([a,b,c,d],'reverse);
[d,c,b,a]$

take([[a,b,c], [d,e,f], [g,h,i]], [2,3],-2);
[[e,f],[h,i]]$

(a : table( i*j^2*k*3, [i,3],[j,3],[k,3]),
  b : lrange(10),
  c : "abcdefghijk",
  0);
0$

take(b,1);
[1]$

take(b,2);
[1,2]$

take(b,-1);
[10]$

is(take(b,[-1,1,-1]) = reverse(b));
true$

take(b,[5]);
[5]$

take(b,[-2]);
[9]$

take(b,-2);
[9,10]$

take(b,[2,8,2]);
[2,4,6,8]$

take(b,[8,2,-2]);
[8,6,4,2]$


take(a,[1,-1,1],[1,-1,1],[-1,1,-1]);
[[[9,6,3],[36,24,12],[81,54,27]],[[18,12,6],[72,48,24],[162,108,54]],
        [[27,18,9],[108,72,36],[243,162,81]]]$

/* skip every other element at level 2. reverse level 3  */
take(a,[1,-1,1],[1,-1,2],[-1,1,-2]);
[[[9,3],[81,27]],[[18,6],[162,54]],[[27,9],[243,81]]]$

is(take(table(i+j,[i,3],[j,3], ot->ar), 2,2) =  faex([[2,3],[3,4]]));
true$

string_take(c,1);
"a"$

string_take(c,2);
"ab"$

string_take(c,-1);
"k"$

string_take(c,-2);
"jk"$

string_take(c,[3]);
"c"$

string_take(c,[-3]);
"i"$

string_take(c,[-1,1,-1]);
"kjihgfedcba"$

string_take(c,[2,slength(c),2]);
"bdfhj"$

string_take("cat",'none);
""$

string_take("cat",'reverse);
"tac"$

string_take("cat",'all);
"cat"$

partition_list(lrange(6),2);
[[1,2],[3,4],[5,6]]$

partition_list(lrange(6),2,1);
[[1,2],[2,3],[3,4],[4,5],[5,6]]$

(b : table(i*j,[i,4],[j,4]),
  partition_list(b,[2,2]));
[[[[1,2],[3,4]],[[2,4],[6,8]]],[[[3,6],[9,12]],[[4,8],[12,16]]]]$

partition_list(b,[2,2],1);
[[[[1,2],[2,3],[3,4]],[[2,4],[4,6],[6,8]]],
         [[[2,4],[4,6],[6,8]],[[3,6],[6,9],[9,12]]],
         [[[3,6],[6,9],[9,12]],[[4,8],[8,12],[12,16]]]]$

partition_list(b,[2,2],[1,1]);
[[[[1,2],[2,3],[3,4]],[[2,4],[4,6],[6,8]]],
         [[[2,4],[4,6],[6,8]],[[3,6],[6,9],[9,12]]],
         [[[3,6],[6,9],[9,12]],[[4,8],[8,12],[12,16]]]]$

kill(a,b,c);
done$
